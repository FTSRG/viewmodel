@Ecore(nsPrefix="logicmodel", nsURI="http://inf.mit.bme.hu/emf/2017/LogicModel")
@GenModel(modelDirectory="/hu.bme.mit.inf.viewmodel.runtime.model/src-gen", prefix="LogicModel",
	fileExtensions="logicmodel", providerName="BME MIT FTSRG", operationReflection="false")
package hu.bme.mit.inf.viewmodel.runtime.model.logicmodel

import org.eclipse.emf.ecore.EClass
import org.eclipse.emf.ecore.EObject
import org.eclipse.emf.ecore.EStructuralFeature

class LogicModel {
	contains Variable[] variables
	contains Constraint[] constraints
}

class Variable {
	long ^id
	op String toString() {
		"<" + ^id + ">"
	}
}

abstract class Constraint {
}

abstract class UnaryConstraint extends Constraint {
	refers Variable variable
}

abstract class BinaryConstraint extends Constraint {
	refers Variable left
	refers Variable right
}

class EClassConstraint extends UnaryConstraint {
	refers EClass targetEClass
	op String toString() {
		targetEClass.name + "(" + variable + ")"
	}
}

class JavaClassConstraint extends UnaryConstraint {
	Class<?> targetClass
	op String toString() {
		"java " + targetClass.simpleName + "(" + variable + ")"
	}
}

class ConstantEObjectConstraint extends UnaryConstraint {
	refers EObject value
	op String toString() {
		variable + " == " + value
	}
}

class ConstantJavaObjectConstraint extends UnaryConstraint {
	Object value
	op String toString() {
		variable + " == " + value
	}
}

class EquivalenceConstraint extends BinaryConstraint {
	op String toString() {
		left + " == " + right
	}
}

class RelationConstraint extends BinaryConstraint {
	refers EStructuralFeature targetRelation
	op String toString() {
		targetRelation.EContainingClass.name + "." + targetRelation.name + "(" + left + ", " + right + ")"
	}
}


